The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Importing the function matrix_divided:
        >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
        >>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, 3)
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Checking for module docstring:
	>>> m = __import__("2-matrix_divided").__doc__
        >>> len(m) > 1
        True

Checking for function docstring:
        >>> len(__import__("2-matrix_divided").matrix_divided.__doc__) > 1
        True

Checking if matrix exists:
        >>> matrix = None
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking if matrix is NOT a list of lists:
        >>> matrix = "hi"
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix = 4
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix = False
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking division by positive or negative integers:
        >>> matrix = [[7, 8, 9], [10, 11, 12]]
        >>> matrix_divided(matrix, 3)
        [[2.33, 2.67, 3.0], [3.33, 3.67, 4.0]]

        >>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, -5)
        [[-0.2, -0.4, -0.6], [-0.8, -1.0, -1.2]]


Checking devision with positive or negative floats:
        >>> matrix = [[1.1, 2, -3.3], [4, 5.5, -6]]
        >>> matrix_divided(matrix, 5)
        [[0.22, 0.4, -0.66], [0.8, 1.1, -1.2]]

Checking devision by 1:
        >>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, 1)
        [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Checking devision with a boolen:
        >>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, True)
        Traceback (most recent call last):
        ...
        TypeError: div must be a number

        >>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, False)
        Traceback (most recent call last):
        ...
        TypeError: div must be a number

Checking devision with a string:
        >>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, "Hello")
        Traceback (most recent call last):
        ...
        TypeError: div must be a number

Checking devision with various types.
        >>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, [1, 2])
        Traceback (most recent call last):
                ...
        TypeError: div must be a number

        >>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, {1})
        Traceback (most recent call last):
                ...
        TypeError: div must be a number

        >>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, ())
        Traceback (most recent call last):
                ...
        TypeError: div must be a number

        >>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, (1))
        [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Checking deviding None by None:
        >>> matrix = None
        >>> matrix_divided(matrix, None)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing a matrix where rows are unequal in size.
        >>> matrix = [[2, 34], [7, 9.8, -76, 1], [-77]]
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        ...
        TypeError: Each row of the matrix must have the same size

Dividing a matrix where some of its elements are not floats or integers.
        >>> matrix = [[1, "2", 3], [{4}, "chris_breezy", (6)]]
        >>> matrix_divided(matrix, 10)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing more than two arguments to matrix_divided().
        >>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix, 10, 11) #doctest: +ELLIPSIS
        Traceback (most recent call last):
                        ...
        TypeError: matrix_divided() takes 2 positional arguments but ...

Passing no arguments to matrix_divided().
        >>> matrix_divided()
        Traceback (most recent call last):
                ...
        TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Passing one argument to matrix_divided().
        >>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> matrix_divided(matrix)
        Traceback (most recent call last):
                ...
        TypeError: matrix_divided() missing 1 required positional argument: 'div'